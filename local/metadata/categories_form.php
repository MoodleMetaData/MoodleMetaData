<?php
require_once '../../config.php';
require_once $CFG->dirroot . '/lib/formslib.php';
require_once $CFG->dirroot . '/lib/datalib.php';

/**
 * The form to display the tab for categories.
 */
class categories_form extends moodleform {
	function definition() {
		global $CFG, $DB, $USER; // Declare our globals for use
		global $categoryId;
		
		$mform = $this->_form; // Tell this object to initialize with the properties of the Moodle form.
		
		$category_list = array();
		$category_records = $DB->get_records('coursecategories', array('categoryid' => $categoryId));
		foreach($category_records as $value){
			if(is_null($value->node)){
				$category_list[$value->id] = $value->categoryname;
			} else {
				//$category_list[$value->id] = $value->categoryname;
			}
			
		}
		
		$this->setup_categories($mform, $category_list);
		$this->setup_upload_categories($mform);
	}
	
	/**
	 * Add form elements for displaying course categories uploaded by administrator.
	 * @param object $mform				form definition
	 * @param array $category_list		a list of category records	
	 * @return void
	 */
	private function setup_categories($mform, $category_list){
		$mform->addElement('header', 'category_header', get_string('category_header', 'local_metadata'));
		
		$category_selection = $mform->addElement ('select', 'course_category', get_string ( 'course_category', 'local_metadata' ), $category_list);
		
		$category_selection->setMultiple(true);
		
		// Delete Button
		$mform->addElement ( 'submit', 'delete_category', get_string ( 'delete_category', 'local_metadata' ) );
		$mform->addHelpButton('delete_category', 'delete_category', 'local_metadata');
	}
	
	/**
	 * Add form elements for upload course categories.
	 * @param object $mform		form definition
	 * @return void
	 */
	private function setup_upload_categories($mform){
		$mform->addElement('header', 'upload_category_header', get_string('upload_category_header', 'local_metadata'));
		$mform->addHelpButton('upload_category_header', 'upload_category_header', 'local_metadata');
		
		$mform->addElement('text', 'category_label', get_string('category_label', 'local_metadata'));
		$mform->setType('category_label', PARAM_TEXT);
		//$mform->addRule('category_label', get_string('err_required'), 'required', null, 'server');
		
		//$faculty_selection = $mform->addElement ('select', 'course_faculty', get_string ( 'course_faculty', 'local_metadata' ), $faculty_list);
		
		$mform->addElement('filepicker', 'temp_categories', get_string('file'), null, array('maxbytes' => 0, 'accepted_types' => '.csv'));
		$mform->addElement('submit', 'submit_category', get_string('submit_category', 'local_metadata'));
	}
	
	/**
	 * Submit new categories and insert all entries to coursecategories table.
	 * @param object $data
	 * @param object $mform		form definition
	 * @param object $files		the temporary uploaded csv file
	 * @return void
	 */
	private function submit_category($data, $mform, $files){
		global $CFG, $DB, $USER;
		global $categoryId;
		
		if(!empty($files)){
			$file = reset($files); 
			$content = $file->get_content();
			$all_rows = explode("\n", $content);
			
			$category_label = new stdClass();
			$category_label->categoryid = $categoryId;
			$category_label->categoryname = $data->category_label;
			$insert_category_label = $DB->insert_record('coursecategories', $category_label, true, false);
			
			foreach($all_rows as $row){
				if($row != ''){
					$category_info = new stdClass();
					$category_info->categoryname = $row;
					$category_info->categoryid = $categoryId;
					$category_info->node = $insert_category_label;
					$insert_category = $DB->insert_record('coursecategories', $category_info, true, false);
				}
			}
		}
	}

	/**
	 * Delete the group(s) of categories.
	 * @param object $data		data generated by the form
	 * @return void
	 */
	public function delete_data($data){
		global $CFG, $DB, $USER;
		
		foreach ($data->course_category as $value) {
			$delete_parent_category = $DB->delete_records('coursecategories', array('id'=>$value));
			$delete_child_category = $DB->delete_records('coursecategories', array('node'=>$value));
		}
	}
	
	/**
	 * This function is used for uploading and deleting course categories.
	 * @return void
	 */
	function definition_after_data() {
        parent::definition_after_data();
		
        $mform = $this->_form;	
		$data = $this->get_data();
		
		$category_was_uploaded = $mform->getSubmitValue('submit_category');
		if($category_was_uploaded){
			$files = $this->get_draft_files('temp_categories');
			$this->submit_category($data, $mform, $files);
		}
		
	}
	
	/**
	 * Ensure that the data the user entered is valid.
	 * @see lib/moodleform#validation()
	 */
	function validation($data, $files) {
		$errors = parent::validation ( $data, $files );
		global $DB, $CFG, $USER; // Declare them if you need them
		
		return $errors;
	}
	
	
}

?>
